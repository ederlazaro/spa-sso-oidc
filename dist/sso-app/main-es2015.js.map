{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/sso.config.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <h1>SSO with OpenID Connect</h1>\\n  <hr />\\n  <div>\\n    <button class=\\\"btn btn-success mr-1\\\" (click)=\\\"login()\\\" *ngIf=\\\"!token\\\">\\n      Login\\n    </button>\\n    <button class=\\\"btn btn-primary\\\" (click)=\\\"logout()\\\" *ngIf=\\\"token\\\">\\n      Logout\\n    </button>\\n  </div>\\n  <hr />\\n  <router-outlet *ngIf=\\\"token\\\"></router-outlet>\\n</div>\\n\"","module.exports = \"<h3>\\n  Welcome {{name}} !\\n</h3>\\n\\n<h6>\\n  The login was successful\\n</h6>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  {path:'home',component:HomeComponent},\n  {path:'**',redirectTo:'home'}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\nimport { OAuthService, JwksValidationHandler } from 'angular-oauth2-oidc';\nimport { authConfig } from './sso.config';\nimport { filter } from 'minimatch';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private oauthService:OAuthService){\n    this.configureSingleSignOn();\n  }\n\n  configureSingleSignOn(){\n    this.oauthService.configure(authConfig);\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n    this.oauthService.loadDiscoveryDocumentAndTryLogin();\n  }\n\n  login(){\n    this.oauthService.initImplicitFlow();\n  }\n  \n  logout(){\n    this.oauthService.logOut();\n  }\n\n  get token(){\n    let claims:any = this.oauthService.getIdentityClaims();\n    if (claims) {\n      console.log(claims);\n    };\n    return claims ? claims : null;\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { OAuthModule } from 'angular-oauth2-oidc';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    OAuthModule.forRoot()\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { JwksValidationHandler, OAuthService } from 'angular-oauth2-oidc';\nimport { authConfig } from '../sso.config';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private oauthService:OAuthService){\n    this.configureSingleSignOn();\n  }\n\n  configureSingleSignOn(){\n    this.oauthService.configure(authConfig);\n    this.oauthService.tokenValidationHandler = new JwksValidationHandler();\n    this.oauthService.loadDiscoveryDocumentAndTryLogin();\n  }\n\n  ngOnInit() {\n  }\n\n  get name(){\n    let claims: any = this.oauthService.getIdentityClaims();\n    if (!claims) return 'Anonymous User';\n    return claims[\"name\"];\n  }\n\n}\n","import { AuthConfig } from \"angular-oauth2-oidc\";\n\nexport const authConfig: AuthConfig = {\n  // Url of the Identity Provider\n  issuer: \"https://adfsqa.belcorp.biz\",\n\n  // URL of the SPA to redirect the user to after login\n  redirectUri: window.location.origin + \"/index.html\",\n\n  // The SPA's id. The SPA is registerd with this id at the auth-server\n  clientId: \"26df19f5-817e-41be-bc35-a7eaf010f4b9\",\n\n  // set the scope for the permissions the client should request\n  // The first three are defined by OIDC. The 4th is a usecase-specific one\n  scope: \"openid email\",\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}